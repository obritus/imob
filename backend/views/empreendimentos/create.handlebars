<h2 class="mb-5">Adicionar novo empreendimento</h2>

{{>_empreendimento_form}}
<div class="test"></div>
<script>
	const Cidades = fetch('/api/cidades/')

	const GetBairro = cidade_id => {
		bairroForm.innerHTML = null //LIMPA A LISTA ATUAL
		const Bairro = fetch('/api/bairros/' + cidade_id)
		Bairro
			.then(response => response.json())
			.then(bairros => {
				if(bairros.length > 0) {
					bairros.map(({ _id, name }) => {
						const Render = `<option value="${_id}">${name}</option>`
						bairroForm.innerHTML += Render
					})
					bairroForm.value = bairroForm.options[0].value
				}
			})
	}

	const GetCidade = () => {
		Cidades
			.then(response => response.json())
			.then(cidades => {
				cidades.map(({ _id, name }) => {
					const Render = `<option value="${_id}">${name}</option>`
					cidadeForm.innerHTML += Render
				})
				cidadeForm.value = cidadeForm.options[0].value
				return GetBairro(cidadeForm.value)
			})
	}

	const GetImagens = async ({ _id, filename, empreendimento }) => {
		const imgUrl = `/images/empreendimentos/${empreendimento}/${filename}`

		const divImagem = document.createElement('div')
		const divRadio = document.createElement('input')
		const divLabel = document.createElement('label')
		const divP = document.createElement('p')
		const eraseButton = document.createElement('button')

		divRadio.type = 'radio'
		divRadio.name = 'default_image'
		divRadio.className = 'd-none'
		divRadio.id = _id
		divRadio.value = _id
		divRadio.setAttribute('form', 'form_empreendimento')

		divLabel.htmlFor = _id

		divImagem.className = 'image'

		divP.innerHTML = 'Carregando...'

		divImagem.appendChild(divP)
		divLabel.appendChild(divImagem)

		document.getElementById('uploaded').appendChild(divRadio)
		document.getElementById('uploaded').appendChild(divLabel)

		setTimeout(() => {
			divImagem.removeChild(divP)
			divImagem.style.backgroundImage = `url(${imgUrl})`
			divRadio.checked = true
			divRadio.addEventListener('change', function () {
				console.log(this.id)
			})
		}, 2000)
	}

	const ShowImagesBox = () => {
		imagesBox.classList.add('show')
		imagesBox.scrollIntoView()
	}

	GetCidade()

	document.querySelector('[data-js="form_empreendimento"]')
		.addEventListener('submit', async function(e) {
			e.preventDefault()
			const response =
				await new Response(
					new URLSearchParams(new FormData(e.target).entries())
				).text()

			fetch('/api/empreendimentos/', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/x-www-form-urlencoded'
				},
				body: response
			})
				.then(response => response.json())
				.then(data => {
					if(data._id) {
						sessionStorage.setItem('empreendimento_id', data._id)
						const BlockInputs = () => {
							const GetFormElements =
								document.querySelectorAll('form input, form textarea, form select')
							GetFormElements.forEach(e => e.disabled = true)
						}

						if (data.msg) {
							const alertBox = document.querySelector('[data-js="alert"]')
							alertBox.children[0].innerHTML = data.msg
							if (alertBox.classList.contains('visually-hidden')) {
								alertBox.classList.toggle('visually-hidden')
							}
							alertBox.scrollIntoView({ block: "end", behavior: "smooth" })
						}

						BlockInputs()
						ShowImagesBox()
						document.querySelector('#form_empreendimento .btn').innerText = 'Concluir'
					}
					if(data.err) {
						const alertBox = document.querySelector('[data-js="alert"]')
						alertBox.children[0].innerHTML = "Ocorreu um erro, por favor, verifique as informações digitadas."
						alertBox.classList.toggle('visually-hidden')
						alertBox.scrollIntoView({ block: "end", behavior: "smooth" })
					}
				})
				.catch(err => console.error(err))
		})

	cidadeForm.addEventListener('change', function (e) {GetBairro(this.value)})

	dropZone.ondragover = function () {
		this.classList.add('active')
		return false
	}
	dropZone.ondragleave = function () {
		this.classList.remove('active')
		return false
	}
	dropZone.ondrop = function (e) {
		const upload = files => {
			const data = new FormData()
			data.append('_id', sessionStorage.getItem('empreendimento_id'))

			for(x = 0; x < files.length; x++) {
				data.append('images', files[x])
			}

			fetch('/api/images', { method: 'POST', body: data })
				.then(response => response.json())
				.then(data => data.forEach(data => GetImagens(data)))
				.catch(err => console.error(err))
		}
		e.preventDefault()
		upload(e.dataTransfer.files)
	}

	const alert_buttons = document.querySelector('[data-bs-dismiss="alert"]')
	alert_buttons.addEventListener('click', function (e) {
		e.preventDefault()
		e.path[1].classList.add('visually-hidden')
	})
</script>