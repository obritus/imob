<h2 class="mb-5">
	Editar empreendimento
	<em><small class="text-muted">{{_id}}</small></em>
</h2>

{{>_empreendimento_form}}

<script type="text/javascript">
	const Empreendimento = fetch('/api/empreendimentos/{{_id}}')
	const Imagens = fetch('/api/images/{{_id}}')
	const Cidades = fetch('/api/cidades/')

	const GetBairro = (cidade_id, bairro_id) => {
		bairroForm.innerHTML = null //LIMPA A LISTA ATUAL
		const Bairro = fetch('/api/bairros/' + cidade_id)
		Bairro.then(data => {
			data.json().then(bairros => {
				bairros.map(({ _id, name }) => {
					const Render = `<option value="${_id}">${name}</option>`
					bairroForm.innerHTML += Render
				})
				bairroForm.value = bairro_id || null
			})
		})
	}

	const GetCidade = (cidade_id, bairro_id) => {
		Cidades.then(data => {
			data.json().then(cidades => {
				cidades.map(({ _id, name }) => {
					const Render = `<option value="${_id}">${name}</option>`
					cidadeForm.innerHTML += Render
				})
				cidadeForm.value = cidade_id || null
			})
			return GetBairro(cidade_id, bairro_id)
		})
	}

	const GetImagens = async ({ _id, filename, empreendimento }) => {
		const imgUrl = `/images/empreendimentos/${empreendimento}/${filename}`

		const divImagem = document.createElement('div')
		const divRadio = document.createElement('input')
		const divLabel = document.createElement('label')
		const divP = document.createElement('p')

		divRadio.type = 'radio'
		divRadio.name = 'default_image'
		divRadio.id = _id
		divRadio.className = 'd-none'

		divLabel.htmlFor = _id

		divImagem.className = 'image'

		divP.innerHTML = 'Carregando...'

		divImagem.appendChild(divP)
		divLabel.appendChild(divImagem)

		document.getElementById('uploaded').appendChild(divRadio)
		document.getElementById('uploaded').appendChild(divLabel)

		setTimeout(() => {
			divImagem.removeChild(divP)
			divImagem.style.backgroundImage = `url(${imgUrl})`
		}, 2000)
	}

	const ShowImagesBox = () => imagesBox.scrollIntoView()

	Empreendimento.then(data => {
		data.json().then(empreendimento => {
			const {
				_id,
				title,
				type,
				price,
				categoria,
				cidade,
				bairro,
				google_maps,
				quartos,
				suites,
				banheiros,
				vagas_garagem,
				details,
				status,
				default_image
			} = empreendimento
			
			console.log("Veio do BD", empreendimento)

			titleForm.value = title
			typeForm.value = type
			categoriaForm.value = categoria
			priceForm.value = price
			quartosForm.value = quartos
			suitesForm.value = suites
			banheirosForm.value = banheiros
			vagasForm.value = vagas_garagem
			googleForm.value = google_maps
			detailsForm.value = details
			if (status) {
				statusForm.checked = true
			} else {
				statusForm.checked = false
			}

			imagesBox.classList.add('show')

			fetch('/api/images/{{_id}}')
				.then(response => response.json().then(data => {
					const divImagens = document.getElementById('uploaded')
					console.log(data)
					data.forEach(data => GetImagens(data))
					document.querySelector('[data-js="total_images"]').innerHTML = data.length
					document.querySelector('input[type="radio"]').checked = default_image || null
					document.querySelector('form button').innerHTML = 'Aplicar alterações'

					return GetCidade(cidade._id, bairro._id)
				})
				).catch(err => console.error(err))

		}).catch(err => console.error(err))
	})

	cidadeForm.addEventListener('change', function (e) {
		const cidade_id = this.value
		GetBairro(cidade_id)
	})

	document.querySelector('[data-js="form_empreendimento"]')
		.addEventListener('submit', function(e) {
			e.preventDefault()

			const dados = {
				title: titleForm.value,
				type: typeForm.value,
				price: priceForm.value,
				categoria: categoriaForm.value,

				cidade: cidadeForm.value,
				bairro: bairroForm.value,
				google_maps: googleForm.value,

				quartos: quartosForm.value,
				suites: suitesForm.value,
				banheiros: banheirosForm.value,
				vagas_garagem: vagasForm.value,
				details: detailsForm.value,

				status: statusForm.checked,
			}

			sessionStorage.setItem('dados', JSON.stringify(dados))

			{{!-- console.log("Dados enviados:", dados) --}}

			fetch('/api/empreendimentos/{{_id}}', {
				method: 'PUT',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify(dados)
			})
				.then(res => console.log(res))
				.catch(err => console.error(err))
		})

	dropZone.ondragover = function () {
		this.classList.add('active')
		return false
	}
	dropZone.ondragleave = function () {
		this.classList.remove('active')
	}
	dropZone.ondrop = function (e) {
		const upload = files => {
			const data = new FormData()
			data.append('_id', '{{_id}}')

			for (x = 0; x < files.length; x++) {
				data.append('images', files[x])
			}

			fetch('/api/images', { method: 'POST', body: data })
				.then(response => response.json())
				.then(data => data.forEach(data => GetImagens(data)))
				.catch(err => console.error(err))
		}
		e.preventDefault()
		upload(e.dataTransfer.files)
	}
</script>