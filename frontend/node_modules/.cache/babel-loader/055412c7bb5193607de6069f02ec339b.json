{"ast":null,"code":"var _jsxFileName = \"/Users/kaique/Node/imobjs/frontend/src/components/empreendimentos/Empreendimento.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Spinner } from 'reactstrap';\nimport Empreendimento from './Empreendimento';\nimport api from '../../api';\nexport default class Section extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.GetEmpreendimento(this.props.data.id).then(Empreendimento => {\n        this.setState({\n          Empreendimento: Empreendimento.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      numberOfEmpreendimentos: 50,\n      Empreendimento: [],\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      Empreendimento,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      style: {\n        width: '3rem',\n        height: '3rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(Empreendimento, {\n      data: Empreendimento,\n      single: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/kaique/Node/imobjs/frontend/src/components/empreendimentos/Empreendimento.jsx"],"names":["React","Component","Container","Spinner","Empreendimento","api","Section","constructor","props","componentWillMount","setState","isLoading","GetEmpreendimento","data","id","then","state","numberOfEmpreendimentos","render","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,YAAnC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,eAAe,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC9CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SASnBC,kBATmB,GASE,YAAY;AAChC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAMN,GAAG,CAACO,iBAAJ,CAAsB,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,EAAtC,EAA0CC,IAA1C,CAA+CX,cAAc,IAAI;AACtE,aAAKM,QAAL,CAAc;AACbN,UAAAA,cAAc,EAAEA,cAAc,CAACS,IADlB;AAEbF,UAAAA,SAAS,EAAE;AAFE,SAAd;AAIA,OALK,CAAN;AAMA,KAjBkB;;AAGlB,SAAKK,KAAL,GAAa;AACZC,MAAAA,uBAAuB,EAAE,EADb;AAEZb,MAAAA,cAAc,EAAE,EAFJ;AAGZO,MAAAA,SAAS,EAAE;AAHC,KAAb;AAKA;;AAUDO,EAAAA,MAAM,GAAG;AACR,UAAM;AAACd,MAAAA,cAAD;AAAiBO,MAAAA;AAAjB,QAA8B,KAAKK,KAAzC;AACA,wBACC;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEL,SAAS,gBACP,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,gBAEP,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAEhB,cAAtB;AAAsC,MAAA,MAAM,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADD,CADD;AAUA;;AA/B6C","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Spinner } from 'reactstrap'\nimport Empreendimento from './Empreendimento'\nimport api from '../../api'\n\nexport default class Section extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tnumberOfEmpreendimentos: 50,\n\t\t\tEmpreendimento: [],\n\t\t\tisLoading: false\n\t\t}\n\t}\n\tcomponentWillMount = async () => {\n\t\tthis.setState({ isLoading: true})\n\t\tawait api.GetEmpreendimento(this.props.data.id).then(Empreendimento => {\n\t\t\tthis.setState({\n\t\t\t\tEmpreendimento: Empreendimento.data,\n\t\t\t\tisLoading: false\n\t\t\t})\n\t\t})\n\t}\n\trender() {\n\t\tconst {Empreendimento, isLoading} = this.state\n\t\treturn (\n\t\t\t<section className=\"pt-3\">\n\t\t\t\t<Container>\n\t\t\t\t\t{isLoading\n\t\t\t\t\t\t? <Spinner style={{ width: '3rem', height: '3rem' }} />\n\t\t\t\t\t\t: <Empreendimento data={Empreendimento} single />\n\t\t\t\t\t}\n\t\t\t\t</Container>\n\t\t\t</section>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}